{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 1,\n  class: \"emptyList\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", null, \" can't get screenList or screenList is empty.\", -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return !$setup.isEmpty ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.screenList, screenItem => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"screenList\",\n      key: screenItem.screenKind\n    }, [_createElementVNode(\"div\", {\n      onClick: $event => $setup.onclick(screenItem.token),\n      class: \"screenType\"\n    }, _toDisplayString(screenItem.screenKind), 9 /* TEXT, PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _hoisted_5));\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_4","$setup","isEmpty","_createElementBlock","_hoisted_1","_Fragment","_renderList","screenList","screenItem","key","screenKind","onClick","$event","onclick","token","_hoisted_2","_hoisted_3","_hoisted_5"],"sources":["C:\\Users\\dennis.tsai\\Desktop\\log\\template\\src\\App.vue"],"sourcesContent":["<script setup>\n  import { ref } from 'vue'\n  import { getScreenList } from '@/util/getScreenList';\n  \n  let screenList = ref([])\n  let isEmpty = ref(true)\n  \n  \n  getScreenList().then((data) => {\n    \n    screenList.value = data\n    \n    isEmpty.value = false\n  })\n  function onclick(token){\n    window.open(`http://192.168.22.99/player/${token}`)\n  }\n</script>\n<template>\n  <div\n    v-if=\"!isEmpty\"\n  >\n    <div class=\"screenList\"\n      v-for=\"screenItem in screenList\"\n      :key=\"screenItem.screenKind\"\n    >\n      <div \n        @click=\"onclick(screenItem.token)\"\n        class=\"screenType\"\n      >\n        {{ screenItem.screenKind }}\n      </div>\n    </div>\n  </div>\n  <div\n    v-else\n    class=\"emptyList\"\n  >\n    <span> can't get screenList or screenList is empty.</span>\n  </div>\n</template>\n\n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n.emptyList {\n  \n  span {\n    padding: 2rem;\n    background-color: indianred;\n  }\n}\n</style>\n"],"mappings":";;;;;;;EAoCIA,KAAK,EAAC;;gCAENC,mBAAA,CAA0D,cAApD,+CAA6C;oBAAnDC,UAA0D,C;;UAlBnDC,MAAA,CAAAC,OAAO,I,cADhBC,mBAAA,CAcM,OAAAC,UAAA,I,kBAXJD,mBAAA,CAUME,SAAA,QAAAC,WAAA,CATiBL,MAAA,CAAAM,UAAU,EAAxBC,UAAU;yBADnBL,mBAAA,CAUM;MAVDL,KAAK,EAAC,YAAY;MAEpBW,GAAG,EAAED,UAAU,CAACE;QAEjBX,mBAAA,CAKM;MAJHY,OAAK,EAAAC,MAAA,IAAEX,MAAA,CAAAY,OAAO,CAACL,UAAU,CAACM,KAAK;MAChChB,KAAK,EAAC;wBAEHU,UAAU,CAACE,UAAU,wBAAAK,UAAA,E;qDAI9BZ,mBAAA,CAKM,OALNa,UAKM,EAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}