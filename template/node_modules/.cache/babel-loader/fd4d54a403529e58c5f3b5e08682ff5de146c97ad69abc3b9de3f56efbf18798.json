{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"emptyList\"\n}, \" can't get screen list from this server. \", -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.serverList, server => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"screenList\",\n      key: server\n    }, [_createTextVNode(_toDisplayString(_ctx.key) + \" \", 1 /* TEXT */), _createElementVNode(\"p\", null, \" 192.168.22.\" + _toDisplayString(server), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.screenList[server], screen => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: screen\n      }, [!screen.isEmpty ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(screen.data, data => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: data.token,\n          onClick: $event => $setup.onclick(server, data.token),\n          class: \"screenType\"\n        }, _toDisplayString(data.screenKind), 9 /* TEXT, PROPS */, _hoisted_2);\n      }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _hoisted_5))]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_4","_createElementBlock","_Fragment","_renderList","$setup","serverList","server","key","_ctx","_toDisplayString","screenList","screen","isEmpty","_hoisted_1","data","token","onClick","$event","onclick","screenKind","_hoisted_2","_hoisted_3","_hoisted_5"],"sources":["C:\\Users\\dennis.tsai\\Desktop\\log\\template\\src\\App.vue"],"sourcesContent":["<!-- eslint-disable no-unused-vars -->\n<script setup>\n  import { ref } from 'vue'\n  import { getScreenList } from '@/util/getScreenList';\n  \n  let screenList = ref([])\n  let serverList = ref(['99', '100'])\n  let isEmpty = ref(true)\n  \n  serverList.value.map( (domainIp) => {\n    getScreenList(domainIp).then((data) => {\n      console.log(data)\n      // data.map((item) => {\n      //   Object.keys(item).map((key) => {\n      //     serverList.value.push(key)\n      //   })\n      // })\n      screenList.value[domainIp] = (data)\n      console.log(screenList.value)\n    })\n  })\n  function onclick(server, token){\n    window.open(`http://192.168.22.${server}/player/${token}`)\n  }\n</script>\n<template>\n  \n    <div class=\"screenList\"\n      v-for=\"server in serverList\"\n      :key=\"server\"\n    >\n    {{ key }}\n      <p> 192.168.22.{{ server }}</p>\n      \n      <div\n        v-for=\"screen in screenList[server]\"\n        :key=\"screen\"\n      >\n        <div\n          v-if=\"!screen.isEmpty\"\n        >\n          <div \n            v-for=\"data in screen.data\"\n            :key=\"data.token\"\n            @click=\"onclick(server, data.token)\"\n            class=\"screenType\"\n          >\n            {{ data.screenKind }}\n          </div>\n        </div> \n        <div\n          v-else\n        >\n          <div\n            class=\"emptyList\"\n          > \n            can't get screen list from this server.\n          </div>\n        </div>\n        \n      </div>\n        \n  </div>\n  \n</template>\n\n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n.screenType {\n  display: inline-block;\n  padding: 2rem;\n  margin: 10px;\n  background-color: aliceblue;\n  border: 2px solid black;\n}\n\n.emptyList {\n  \n  div {\n    background-color: indianred;\n    display: inline-block;\n    padding: 2rem;\n    margin: 10px;\n    border: 2px solid black;\n  }\n}\n</style>\n"],"mappings":";;;;;;;;gCAqDUA,mBAAA,CAIM;EAHJC,KAAK,EAAC;AAAW,GAClB,2CAED;oBAJAC,UAIM,C;;2BA9BZC,mBAAA,CAmCIC,SAAA,QAAAC,WAAA,CAlCeC,MAAA,CAAAC,UAAU,EAApBC,MAAM;yBADfL,mBAAA,CAmCI;MAnCCF,KAAK,EAAC,YAAY;MAEpBQ,GAAG,EAAED;0CAELE,IAAA,CAAAD,GAAG,IAAG,GACP,iBAAAT,mBAAA,CAA+B,WAA5B,cAAY,GAAAW,gBAAA,CAAGH,MAAM,mB,kBAExBL,mBAAA,CA0BMC,SAAA,QAAAC,WAAA,CAzBaC,MAAA,CAAAM,UAAU,CAACJ,MAAM,GAA3BK,MAAM;2BADfV,mBAAA,CA0BM;QAxBHM,GAAG,EAAEI;MAAM,I,CAGHA,MAAM,CAACC,OAAO,I,cADvBX,mBAAA,CAWM,OAAAY,UAAA,I,kBARJZ,mBAAA,CAOMC,SAAA,QAAAC,WAAA,CANWQ,MAAM,CAACG,IAAI,EAAnBA,IAAI;6BADbb,mBAAA,CAOM;UALHM,GAAG,EAAEO,IAAI,CAACC,KAAK;UACfC,OAAK,EAAAC,MAAA,IAAEb,MAAA,CAAAc,OAAO,CAACZ,MAAM,EAAEQ,IAAI,CAACC,KAAK;UAClChB,KAAK,EAAC;4BAEHe,IAAI,CAACK,UAAU,wBAAAC,UAAA;yDAGtBnB,mBAAA,CAQM,OAAAoB,UAAA,EAAAC,UAAA,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}