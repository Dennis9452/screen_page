{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.screenList, screenItem => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"hello\",\n      key: screenItem.text\n    }, _toDisplayString(screenItem.text), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$setup","screenList","screenItem","class","key","text"],"sources":["C:\\Users\\dennis.tsai\\Desktop\\log\\template\\src\\components\\HelloWorld.vue"],"sourcesContent":["<script setup>\n  import { ref } from 'vue'\n  import axios from \"axios\"\n  // import { getScreenList } from '@/util/getScreenList';\n  \n  let screenList = ref([])\n  \n  async function getScreenList(){\n    await axios.get('http://192.168.22.99/edgeReceive/deviceList')\n    .then( (response) => {\n      console.log(response)\n      screenList.value = response.data\n    })\n    .catch( (error) => console.log(error))\n  }\n  \n  getScreenList().then((res) => {\n    \n    console.log(res)\n    // screenList.value = res.data\n    console.log(screenList.value)\n  })\n\n</script>\n<template>\n  <div class=\"hello\"\n    v-for=\"screenItem in screenList\"\n    :key=\"screenItem.text\"\n  >\n    {{ screenItem.text }}\n  </div>\n</template>\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":";;2BAyBEA,mBAAA,CAKMC,SAAA,QAAAC,WAAA,CAJiBC,MAAA,CAAAC,UAAU,EAAxBC,UAAU;yBADnBL,mBAAA,CAKM;MALDM,KAAK,EAAC,OAAO;MAEfC,GAAG,EAAEF,UAAU,CAACG;wBAEdH,UAAU,CAACG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}