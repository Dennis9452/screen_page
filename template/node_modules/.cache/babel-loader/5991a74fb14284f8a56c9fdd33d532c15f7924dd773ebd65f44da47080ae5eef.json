{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.serverList, server => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"screenList\",\n      key: server\n    }, [_createElementVNode(\"p\", null, \" 192.168.22.\" + _toDisplayString(server), 1 /* TEXT */), !$setup.isEmpty ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1)) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.screenList, screen => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: screen.token\n      }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(screen[server], data => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: data.token,\n          onClick: $event => $setup.onclick(screen.token),\n          class: \"screenType\"\n        }, _toDisplayString(data.screenKind), 9 /* TEXT, PROPS */, _hoisted_2);\n      }), 128 /* KEYED_FRAGMENT */))]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$setup","serverList","server","class","key","_createElementVNode","_toDisplayString","isEmpty","_hoisted_1","screenList","screen","token","data","onClick","$event","onclick","screenKind","_hoisted_2"],"sources":["C:\\Users\\dennis.tsai\\Desktop\\log\\template\\src\\App.vue"],"sourcesContent":["<!-- eslint-disable no-unused-vars -->\n<script setup>\n  import { ref } from 'vue'\n  import { getScreenList } from '@/util/getScreenList';\n  \n  let screenList = ref([])\n  let serverList = ref([])\n  let isEmpty = ref(true)\n  \n  \n  getScreenList().then((data) => {\n    console.log(data)\n    data.map((item) => {\n      Object.key(item).map((key) => serverList.value.push(key))\n    })\n    screenList.value = data\n    // screenList.value = data\n    console.log(screenList.value)\n    isEmpty.value = false\n  })\n  function onclick(token){\n    window.open(`http://192.168.22.99/player/${token}`)\n  }\n</script>\n<template>\n  \n    <div class=\"screenList\"\n      v-for=\"server in serverList\"\n      :key=\"server\"\n    >\n      <p> 192.168.22.{{ server }}</p>\n      <div\n        v-if=\"!isEmpty\"\n      >\n\n      </div>\n      <div\n        v-for=\"screen in screenList\"\n        :key=\"screen.token\"\n      >\n        <div \n          v-for=\"data in screen[server]\"\n          :key=\"data.token\"\n          @click=\"onclick(screen.token)\"\n          class=\"screenType\"\n        >\n          {{ data.screenKind }}\n        </div>\n      </div>\n        \n  </div>\n  \n</template>\n\n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n.screenType {\n  display: inline-block;\n  padding: 2rem;\n  margin: 10px;\n  background-color: aliceblue;\n  border: 2px solid black;\n}\n\n.emptyList {\n  \n  span {\n    padding: 2rem;\n    background-color: indianred;\n  }\n}\n</style>\n"],"mappings":";;;;;;2BA0BIA,mBAAA,CAwBIC,SAAA,QAAAC,WAAA,CAvBeC,MAAA,CAAAC,UAAU,EAApBC,MAAM;yBADfL,mBAAA,CAwBI;MAxBCM,KAAK,EAAC,YAAY;MAEpBC,GAAG,EAAEF;QAENG,mBAAA,CAA+B,WAA5B,cAAY,GAAAC,gBAAA,CAAGJ,MAAM,kB,CAEfF,MAAA,CAAAO,OAAO,I,cADhBV,mBAAA,CAIM,OAAAW,UAAA,K,sDACNX,mBAAA,CAYMC,SAAA,QAAAC,WAAA,CAXaC,MAAA,CAAAS,UAAU,EAApBC,MAAM;2BADfb,mBAAA,CAYM;QAVHO,GAAG,EAAEM,MAAM,CAACC;6BAEbd,mBAAA,CAOMC,SAAA,QAAAC,WAAA,CANWW,MAAM,CAACR,MAAM,GAArBU,IAAI;6BADbf,mBAAA,CAOM;UALHO,GAAG,EAAEQ,IAAI,CAACD,KAAK;UACfE,OAAK,EAAAC,MAAA,IAAEd,MAAA,CAAAe,OAAO,CAACL,MAAM,CAACC,KAAK;UAC5BR,KAAK,EAAC;4BAEHS,IAAI,CAACI,UAAU,wBAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}