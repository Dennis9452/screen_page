{"ast":null,"code":"import axios from \"axios\";\nexport function getScreenList(domainIp) {\n  return new Promise(resolve => {\n    const server = process.env.NODE_ENV === 'production' ? domainIp === '99' ? `/edgeReceive/deviceList` : `http://192.168.22.100/edgeReceive/deviceList` : `/edgeReceive${domainIp}/deviceList`;\n    axios.get(server, {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(response => {\n      if (response) {\n        console.log(response);\n        const obj = {};\n        obj[domainIp] = {\n          data: response.data,\n          isEmpty: false\n        };\n        resolve(obj);\n      }\n    }).catch(() => {\n      const obj = {};\n      obj[domainIp] = {\n        isEmpty: true\n      };\n      resolve(obj);\n      console.error('connection error');\n    });\n  });\n}","map":{"version":3,"names":["axios","getScreenList","domainIp","Promise","resolve","server","process","env","NODE_ENV","get","headers","then","response","console","log","obj","data","isEmpty","catch","error"],"sources":["C:/Users/dennis.tsai/Desktop/screen_page/template/src/util/getScreenList.js"],"sourcesContent":["import axios from \"axios\";\r\nexport function getScreenList(domainIp) {\r\n  return new Promise( (resolve) => {\r\n    const server = process.env.NODE_ENV === 'production' ? \r\n        domainIp === '99' ? \r\n        `/edgeReceive/deviceList` \r\n        : `http://192.168.22.100/edgeReceive/deviceList` \r\n      : `/edgeReceive${domainIp}/deviceList`\r\n    axios.get(server,{\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n      }\r\n    })\r\n    .then( (response) => {\r\n      if(response) {\r\n        console.log(response)\r\n        const obj = {}\r\n        obj[domainIp] = {\r\n          data : response.data,\r\n          isEmpty: false,\r\n        } \r\n        resolve(obj)\r\n      } \r\n    })\r\n    .catch( () => {\r\n      const obj = {}\r\n        obj[domainIp] = {\r\n          isEmpty: true\r\n        }\r\n      resolve(obj)\r\n      console.error('connection error')\r\n    })\r\n      \r\n  })\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,SAASC,aAAaA,CAACC,QAAQ,EAAE;EACtC,OAAO,IAAIC,OAAO,CAAGC,OAAO,IAAK;IAC/B,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAChDN,QAAQ,KAAK,IAAI,GAChB,yBAAwB,GACtB,8CAA6C,GAC/C,eAAcA,QAAS,aAAY;IACxCF,KAAK,CAACS,GAAG,CAACJ,MAAM,EAAC;MACfK,OAAO,EAAE;QACP,6BAA6B,EAAE;MACjC;IACF,CAAC,CAAC,CACDC,IAAI,CAAGC,QAAQ,IAAK;MACnB,IAAGA,QAAQ,EAAE;QACXC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,MAAMG,GAAG,GAAG,CAAC,CAAC;QACdA,GAAG,CAACb,QAAQ,CAAC,GAAG;UACdc,IAAI,EAAGJ,QAAQ,CAACI,IAAI;UACpBC,OAAO,EAAE;QACX,CAAC;QACDb,OAAO,CAACW,GAAG,CAAC;MACd;IACF,CAAC,CAAC,CACDG,KAAK,CAAE,MAAM;MACZ,MAAMH,GAAG,GAAG,CAAC,CAAC;MACZA,GAAG,CAACb,QAAQ,CAAC,GAAG;QACde,OAAO,EAAE;MACX,CAAC;MACHb,OAAO,CAACW,GAAG,CAAC;MACZF,OAAO,CAACM,KAAK,CAAC,kBAAkB,CAAC;IACnC,CAAC,CAAC;EAEJ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}