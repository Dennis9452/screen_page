{"ast":null,"code":"import axios from \"axios\";\nexport function getScreenList(domainIp) {\n  let result = new Promise();\n  switch (domainIp) {\n    case 99:\n      result = new Promise(resolve => {\n        axios.get(`/edgeReceive_99/deviceList`, {\n          headers: {\n            'Access-Control-Allow-Origin': '*'\n          }\n        }).then(response => {\n          if (response) {\n            console.log(response);\n            const obj = {};\n            obj[domainIp] = {\n              data: response.data,\n              isEmpty: false\n            };\n            resolve(obj);\n          }\n        }).catch(() => {\n          const obj = {};\n          obj[domainIp] = {\n            isEmpty: true\n          };\n          resolve(obj);\n          console.error('connection error');\n        });\n      });\n      break;\n    case 100:\n      result = new Promise(resolve => {\n        axios.get(`/edgeReceive_100/deviceList`, {\n          headers: {\n            'Access-Control-Allow-Origin': '*'\n          }\n        }).then(response => {\n          if (response) {\n            console.log(response);\n            const obj = {};\n            obj[domainIp] = {\n              data: response.data,\n              isEmpty: false\n            };\n            resolve(obj);\n          }\n        }).catch(() => {\n          const obj = {};\n          obj[domainIp] = {\n            isEmpty: true\n          };\n          resolve(obj);\n          console.error('connection error');\n        });\n      });\n      break;\n  }\n  return result;\n}","map":{"version":3,"names":["axios","getScreenList","domainIp","result","Promise","resolve","get","headers","then","response","console","log","obj","data","isEmpty","catch","error"],"sources":["C:/Users/dennis.tsai/Desktop/log/template/src/util/getScreenList.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport function getScreenList(domainIp) {\r\n  let result = new Promise()\r\n  switch(domainIp){\r\n    case 99:\r\n      result =  new Promise( (resolve) => {\r\n        axios.get(`/edgeReceive_99/deviceList`,{\r\n          headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n          }\r\n        })\r\n        .then( (response) => {\r\n          if(response) {\r\n            console.log(response)\r\n            const obj = {}\r\n            obj[domainIp] = {\r\n              data : response.data,\r\n              isEmpty: false,\r\n            } \r\n            resolve(obj)\r\n          } \r\n        })\r\n        .catch( () => {\r\n          const obj = {}\r\n            obj[domainIp] = {\r\n              isEmpty: true\r\n            }\r\n          resolve(obj)\r\n          console.error('connection error')\r\n        })\r\n          \r\n      })\r\n      break\r\n    case 100:\r\n      result =  new Promise( (resolve) => {\r\n        axios.get(`/edgeReceive_100/deviceList`,{\r\n          headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n          }\r\n        })\r\n        .then( (response) => {\r\n          if(response) {\r\n            console.log(response)\r\n            const obj = {}\r\n            obj[domainIp] = {\r\n              data : response.data,\r\n              isEmpty: false,\r\n            } \r\n            resolve(obj)\r\n          } \r\n        })\r\n        .catch( () => {\r\n          const obj = {}\r\n            obj[domainIp] = {\r\n              isEmpty: true\r\n            }\r\n          resolve(obj)\r\n          console.error('connection error')\r\n        })\r\n          \r\n      })\r\n      break\r\n  }\r\n  \r\n  return result\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,aAAaA,CAACC,QAAQ,EAAE;EACtC,IAAIC,MAAM,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC1B,QAAOF,QAAQ;IACb,KAAK,EAAE;MACLC,MAAM,GAAI,IAAIC,OAAO,CAAGC,OAAO,IAAK;QAClCL,KAAK,CAACM,GAAG,CAAE,4BAA2B,EAAC;UACrCC,OAAO,EAAE;YACP,6BAA6B,EAAE;UACjC;QACF,CAAC,CAAC,CACDC,IAAI,CAAGC,QAAQ,IAAK;UACnB,IAAGA,QAAQ,EAAE;YACXC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;YACrB,MAAMG,GAAG,GAAG,CAAC,CAAC;YACdA,GAAG,CAACV,QAAQ,CAAC,GAAG;cACdW,IAAI,EAAGJ,QAAQ,CAACI,IAAI;cACpBC,OAAO,EAAE;YACX,CAAC;YACDT,OAAO,CAACO,GAAG,CAAC;UACd;QACF,CAAC,CAAC,CACDG,KAAK,CAAE,MAAM;UACZ,MAAMH,GAAG,GAAG,CAAC,CAAC;UACZA,GAAG,CAACV,QAAQ,CAAC,GAAG;YACdY,OAAO,EAAE;UACX,CAAC;UACHT,OAAO,CAACO,GAAG,CAAC;UACZF,OAAO,CAACM,KAAK,CAAC,kBAAkB,CAAC;QACnC,CAAC,CAAC;MAEJ,CAAC,CAAC;MACF;IACF,KAAK,GAAG;MACNb,MAAM,GAAI,IAAIC,OAAO,CAAGC,OAAO,IAAK;QAClCL,KAAK,CAACM,GAAG,CAAE,6BAA4B,EAAC;UACtCC,OAAO,EAAE;YACP,6BAA6B,EAAE;UACjC;QACF,CAAC,CAAC,CACDC,IAAI,CAAGC,QAAQ,IAAK;UACnB,IAAGA,QAAQ,EAAE;YACXC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;YACrB,MAAMG,GAAG,GAAG,CAAC,CAAC;YACdA,GAAG,CAACV,QAAQ,CAAC,GAAG;cACdW,IAAI,EAAGJ,QAAQ,CAACI,IAAI;cACpBC,OAAO,EAAE;YACX,CAAC;YACDT,OAAO,CAACO,GAAG,CAAC;UACd;QACF,CAAC,CAAC,CACDG,KAAK,CAAE,MAAM;UACZ,MAAMH,GAAG,GAAG,CAAC,CAAC;UACZA,GAAG,CAACV,QAAQ,CAAC,GAAG;YACdY,OAAO,EAAE;UACX,CAAC;UACHT,OAAO,CAACO,GAAG,CAAC;UACZF,OAAO,CAACM,KAAK,CAAC,kBAAkB,CAAC;QACnC,CAAC,CAAC;MAEJ,CAAC,CAAC;MACF;EACJ;EAEA,OAAOb,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}