{"ast":null,"code":"import { ref } from 'vue';\nimport { getScreenList } from '@/util/getScreenList';\n//test\n\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let screenList = ref({});\n    let serverList = ref(['99', '100']);\n    serverList.value.map(domainIp => {\n      getScreenList(domainIp).then(data => {\n        screenList.value[domainIp] = data;\n      });\n    });\n    function onclick(server, token, event) {\n      event.preventDefault();\n      window.open(`http://192.168.22.${server}/player/${token}`);\n    }\n    function getUrl(server, token) {\n      return `http://192.168.22.${server}/player/${token}`;\n    }\n    const __returned__ = {\n      get screenList() {\n        return screenList;\n      },\n      set screenList(v) {\n        screenList = v;\n      },\n      get serverList() {\n        return serverList;\n      },\n      set serverList(v) {\n        serverList = v;\n      },\n      onclick,\n      getUrl,\n      ref,\n      get getScreenList() {\n        return getScreenList;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","getScreenList","screenList","serverList","value","map","domainIp","then","data","onclick","server","token","event","preventDefault","window","open","getUrl"],"sources":["C:/Users/dennis.tsai/Desktop/screen_page/template/src/App.vue"],"sourcesContent":["\r\n<script setup>\r\n  import { ref } from 'vue'\r\n  import { getScreenList } from '@/util/getScreenList';\r\n  //test\r\n  let screenList = ref({})\r\n  let serverList = ref(['99', '100'])\r\n  serverList.value.map( (domainIp) => {\r\n    getScreenList(domainIp).then((data) => {\r\n      screenList.value[domainIp] = (data)\r\n    })\r\n  })\r\n  function onclick(server, token, event){\r\n    event.preventDefault()\r\n    window.open(`http://192.168.22.${server}/player/${token}`)\r\n  }\r\n\r\n  function getUrl(server, token){\r\n    return `http://192.168.22.${server}/player/${token}`\r\n  }\r\n</script>\r\n<template>\r\n  \r\n    <div class=\"screenList\"\r\n      v-for=\"server in serverList\"\r\n      :key=\"server\"\r\n    >\r\n      <p> 192.168.22.{{ server }}</p>\r\n      \r\n      <div\r\n        v-for=\"screen in screenList[server]\"\r\n        :key=\"screen\"\r\n      >\r\n        <div\r\n          v-if=\"!screen.isEmpty\"\r\n        >\r\n          <div \r\n            v-for=\"data in screen.data\"\r\n            :key=\"data.token\"\r\n            class=\"screenItem\"\r\n            @click.self.stop=\"onclick(server, data.token, $event)\"\r\n          >\r\n              <div>ip : {{ data.ip }}</div>\r\n              <div>uuid : {{ data.uuid }}</div>\r\n              <div>screenKind : {{ data.screenKind }}</div>\r\n              <div>type : {{ data.type}}</div>\r\n              <div \r\n                class=\"screenType\"\r\n                @click.stop=\"onclick(server, data.token, $event)\"\r\n              > \r\n                <a :href=\"getUrl(server, data.token)\"\r\n                > Open </a>\r\n              </div>\r\n          </div>\r\n        </div> \r\n        <div\r\n          v-else\r\n          class=\"emptyList\"\r\n        >\r\n          <div>can't get screen list from this server.</div>\r\n        </div>\r\n        <div class=\"divider\"></div>\r\n      </div>\r\n  </div>\r\n  \r\n</template>\r\n\r\n<style lang=\"scss\">\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n.divider{\r\n  border: 2px solid black;\r\n}\r\n\r\n.screen{\r\n  &Type {\r\n    margin: 10px 0;\r\n    background-color: aliceblue;\r\n    right: -140px;\r\n  }\r\n\r\n  &Item{\r\n    display: inline-block;\r\n    border: 2px solid black;\r\n    text-align: left;\r\n    padding: 1rem;\r\n    margin: 20px;\r\n\r\n    div {\r\n      padding: 10px 0 ;\r\n    }\r\n\r\n    .screenType{\r\n      padding: 1rem;\r\n      text-align: center;\r\n    }\r\n  }\r\n}\r\n\r\n.emptyList {\r\n    background-color: indianred;\r\n    display: inline-block;\r\n    padding: 2rem;\r\n    margin: 10px;\r\n    border: 2px solid black;\r\n}\r\n</style>\r\n"],"mappings":"AAEE,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,aAAa,QAAQ,sBAAsB;AACpD;;;;;;;;IACA,IAAIC,UAAU,GAAGF,GAAG,CAAC,CAAC,CAAC,CAAC;IACxB,IAAIG,UAAU,GAAGH,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACnCG,UAAU,CAACC,KAAK,CAACC,GAAG,CAAGC,QAAQ,IAAK;MAClCL,aAAa,CAACK,QAAQ,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAK;QACrCN,UAAU,CAACE,KAAK,CAACE,QAAQ,CAAC,GAAIE,IAAK;MACrC,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,SAASC,OAAOA,CAACC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAC;MACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtBC,MAAM,CAACC,IAAI,CAAE,qBAAoBL,MAAO,WAAUC,KAAM,EAAC,CAAC;IAC5D;IAEA,SAASK,MAAMA,CAACN,MAAM,EAAEC,KAAK,EAAC;MAC5B,OAAQ,qBAAoBD,MAAO,WAAUC,KAAM,EAAC;IACtD"},"metadata":{},"sourceType":"module","externalDependencies":[]}