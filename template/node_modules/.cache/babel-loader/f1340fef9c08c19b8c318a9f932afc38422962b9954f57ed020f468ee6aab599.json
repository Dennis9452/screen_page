{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport function getScreenList() {\n  const screenList = [];\n  return new Promise(resolve => {\n    axios.get('http://192.168.22.99/edgeReceive/deviceList').then(response => {\n      if (response) {\n        screenList.push({\n          99: {\n            data: response.data,\n            isEmpty: false\n          }\n        });\n        resolve();\n      }\n    }).catch(() => {\n      screenList.push({\n        99: {\n          isEmpty: true\n        }\n      });\n      console.error('connection error');\n    }).then(() => {\n      axios.get('http://192.168.22.100/edgeReceive/deviceList').then(response => {\n        if (response) {\n          screenList.push({\n            100: {\n              data: response.data,\n              isEmpty: false\n            }\n          });\n          resolve(screenList);\n        }\n      }).catch(() => {\n        screenList.push({\n          100: {\n            isEmpty: true\n          }\n        });\n        console.error('connection error');\n      });\n    });\n  });\n}","map":{"version":3,"names":["axios","getScreenList","screenList","Promise","resolve","get","then","response","push","data","isEmpty","catch","console","error"],"sources":["C:/Users/dennis.tsai/Desktop/log/template/src/util/getScreenList.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport function getScreenList() {\r\n  const screenList = []\r\n  return new Promise( (resolve) => {\r\n    axios.get('http://192.168.22.99/edgeReceive/deviceList')\r\n    .then( (response) => {\r\n      if(response) {\r\n        screenList.push({ 99 : {\r\n          data : response.data,\r\n          isEmpty: false,\r\n        } })\r\n        resolve()\r\n      } \r\n    })\r\n    .catch( () => {\r\n      screenList.push({ 99 : { isEmpty: true }} )\r\n      console.error('connection error')\r\n    })\r\n    .then(() => {\r\n      axios.get('http://192.168.22.100/edgeReceive/deviceList')\r\n      .then( (response) => {\r\n        if(response) {\r\n          screenList.push({ 100 : {\r\n            data : response.data,\r\n            isEmpty: false,\r\n          } })\r\n          resolve(screenList)\r\n        } \r\n      })\r\n      .catch( () => {\r\n        screenList.push({ 100 : { isEmpty: true }} )\r\n        console.error('connection error')\r\n      })\r\n    })\r\n      \r\n  })\r\n  \r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC9B,MAAMC,UAAU,GAAG,EAAE;EACrB,OAAO,IAAIC,OAAO,CAAGC,OAAO,IAAK;IAC/BJ,KAAK,CAACK,GAAG,CAAC,6CAA6C,CAAC,CACvDC,IAAI,CAAGC,QAAQ,IAAK;MACnB,IAAGA,QAAQ,EAAE;QACXL,UAAU,CAACM,IAAI,CAAC;UAAE,EAAE,EAAG;YACrBC,IAAI,EAAGF,QAAQ,CAACE,IAAI;YACpBC,OAAO,EAAE;UACX;QAAE,CAAC,CAAC;QACJN,OAAO,CAAC,CAAC;MACX;IACF,CAAC,CAAC,CACDO,KAAK,CAAE,MAAM;MACZT,UAAU,CAACM,IAAI,CAAC;QAAE,EAAE,EAAG;UAAEE,OAAO,EAAE;QAAK;MAAC,CAAE,CAAC;MAC3CE,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;IACnC,CAAC,CAAC,CACDP,IAAI,CAAC,MAAM;MACVN,KAAK,CAACK,GAAG,CAAC,8CAA8C,CAAC,CACxDC,IAAI,CAAGC,QAAQ,IAAK;QACnB,IAAGA,QAAQ,EAAE;UACXL,UAAU,CAACM,IAAI,CAAC;YAAE,GAAG,EAAG;cACtBC,IAAI,EAAGF,QAAQ,CAACE,IAAI;cACpBC,OAAO,EAAE;YACX;UAAE,CAAC,CAAC;UACJN,OAAO,CAACF,UAAU,CAAC;QACrB;MACF,CAAC,CAAC,CACDS,KAAK,CAAE,MAAM;QACZT,UAAU,CAACM,IAAI,CAAC;UAAE,GAAG,EAAG;YAAEE,OAAO,EAAE;UAAK;QAAC,CAAE,CAAC;QAC5CE,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC,CAAC;EAEJ,CAAC,CAAC;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}